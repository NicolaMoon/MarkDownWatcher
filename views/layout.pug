html
  block head
  link(rel="stylesheet", href="https://fonts.googleapis.com/css?family=Noto+Serif+SC")
  body
    div.header
      p.title Markdown Watcher
      .floatRight
        span.label 切换样式:
        select(onchange=`handleChangeStyle()`)#selectCss
          each item in cssList
            option(value=item, selected=css===item ? true : false)= item
    div.wrapper
      block content
    block script
    script.
      // 作为判断Tooltip显示隐藏的变量
      let tooltipDisplay = false;
      // 判断单击还是长按的变量
      let clickStart = undefined;
      let clickEnd = undefined;
      // 获取URL的querys
      function getQuerys() {
        let url = window.location.href;
        let querys = {};
        url.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m, key, value) {
          querys[key] = value;
        });
        return querys;
      }
      // 改变样式文件
      function handleChangeStyle() {
        let select = document.getElementById('selectCss');
        let cssValue = select.value;
        let querys = getQuerys();
        window.location.href = `../?file=${querys.file || 'index'}&css=${cssValue}`;
      }
      // 监听按下鼠标按钮事件
      document.addEventListener("mousedown", mouseDown, true);
      function mouseDown() {
        clickStart = new Date().getTime();
      }
      // 监听释放鼠标按钮事件
      document.addEventListener("mouseup", mouseUp, true);
      function mouseUp() {
        const tooltip = document.getElementsByClassName('tooltip')[0];
        clickEnd = new Date().getTime();
        if (clickEnd - clickStart < 150) {
          tooltip.style.cssText = 'display: none;';
          return;
        }
        var text = "";
        if (window.getSelection) {
            text = window.getSelection().toString();
        } else if (document.selection && document.selection.type != "Control") {
            text = document.selection.createRange().text;
        }
        if ("" !== text) {
          const textPosition = window.getSelection().getRangeAt(0).getBoundingClientRect();
          if (textPosition.x < 160 || textPosition.x > 860 || textPosition.y < 60) return;
          tooltip.style.cssText = `top: ${textPosition.y - 120}; left: ${textPosition.x + textPosition.width/2 - 205}; display: block;`;
          tooltipDisplay = !tooltipDisplay;
        }
      }